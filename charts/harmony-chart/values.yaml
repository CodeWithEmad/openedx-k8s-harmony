# Default values for tutor-multi-chart.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

ingress-nginx:
  # Use ingress-nginx as a default controller.
  enabled: true

cert-manager:
  # Use cert-manager as a default certificate controller.
  enabled: true
  installCRDs: false
    # Email address associated with the ACME account. Used to notify about expiring
    # certificates.
  email: ""

# Multi-tenant ElasticSearch
elasticsearch:
  enabled: false

  clusterName: "harmony-search-cluster"
  masterService: "harmony-search-cluster"

  # Operators will need to add/update the following setting in each
  # of their instances by running the commands:
  # ```
  # tutor config save --set K8S_HARMONY_ENABLE_SHARED_HARMONY_SEARCH=true --set RUN_ELASTICSEARCH=false
  # tutor harmony create-elasticsearch-user
  # ```
  # RUN_ELASTICSEARCH: false
  # HARMONY_SEARCH_INDEX_PREFIX: "username-"
  # K8S_HARMONY_ENABLE_SHARED_HARMONY_SEARCH: true
  # HARMONY_SEARCH_HTTP_AUTH: "username:actual_password"

  # We will create the relevant certs, because they need to shared
  # with pods in other namespaces.
  createCert: false
  # Authentication is only available in https
  protocol: https

  # This secret will contain the http certificates.
  secretMounts:
    - name: elasticsearch-certificates
      secretName: elasticsearch-certificates
      path: /usr/share/elasticsearch/config/certs
      defaultMode: 0777

  # The password for the elastic user is stored in this secret
  extraEnvs:
    - name: ELASTIC_PASSWORD
      valueFrom:
        secretKeyRef:
          name: elasticsearch-credentials
          key: password

  esConfig:
    "elasticsearch.yml": |
      cluster.name: harmony-search-cluster
      xpack.security.enabled: true
      xpack.security.http.ssl.enabled: true
      xpack.security.http.ssl.key: /usr/share/elasticsearch/config/certs/tls.key
      xpack.security.http.ssl.certificate: /usr/share/elasticsearch/config/certs/tls.crt
      xpack.security.transport.ssl.enabled: true
      xpack.security.transport.ssl.key: /usr/share/elasticsearch/config/certs/tls.key
      xpack.security.transport.ssl.certificate: /usr/share/elasticsearch/config/certs/tls.crt
      xpack.security.transport.ssl.certificate_authorities: /usr/share/elasticsearch/config/certs/ca.crt
      xpack.security.transport.ssl.verification_mode: certificate

# Configuration for the metrics server chart
metricsserver:
   # Control the chart inclusion
   enabled: false
   # See https://github.com/kubernetes-sigs/metrics-server/blob/master/charts/metrics-server/values.yaml
   # for all available options
   replicas: 1
# Configuration for the Vertical Pod Autoscaler chart
vpa:
   # Control the chart inclusion
   enabled: false
   # See https://github.com/cowboysysop/charts/blob/master/charts/vertical-pod-autoscaler/values.yaml
   # for all available options
   admissionController:
      replicaCount: 1


# Multi-tenant OpenSearch
opensearch:
  enabled: false
  clusterName: "harmony-search-cluster"
  masterService: "harmony-search-cluster"

  # Operators will need to add/update the following setting in each
  # of their instances by running the commands:
  # ```
  # tutor config save --set K8S_HARMONY_ENABLE_SHARED_HARMONY_SEARCH=true --set RUN_ELASTICSEARCH=false
  # tutor harmony create-opensearch-user
  # ```
  # RUN_ELASTICSEARCH: false
  # HARMONY_SEARCH_INDEX_PREFIX: "username-"
  # K8S_HARMONY_USE_SHARED_OPENSEARCH: true
  # HARMONY_SEARCH_HTTP_AUTH: "username:actual_password"


  # # This secret will contain the ssl certificates.
  secretMounts:
    - name: opensearch-certificates
      secretName: opensearch-certificates
      path: /usr/share/opensearch/config/certs
      defaultMode: 0777

  resources:
    requests:
      cpu: "1000m"
      memory: "100Mi"

  persistence:
    size: 30Gi

  # Set vm.max_map_count
  # Default value is 262144
  sysctlInit:
    enabled: true

  extraEnvs:
    - name: DISABLE_INSTALL_DEMO_CONFIG
      value: "true"
    - name: HARMONY_PASSWORD
      valueFrom:
        secretKeyRef:
          name: opensearch-credentials
          key: harmony_password

  # Allows you to add any config files in {{ .Values.opensearchHome }}/config
  opensearchHome: /usr/share/opensearch
  # such as opensearch.yml and log4j2.properties

  securityConfig:
    enabled: true
    internalUsersSecret: opensearch-credentials

  config:
    opensearch.yml: |
      cluster.name: harmony-search-cluster
      network.host: 0.0.0.0
      plugins:
        security:
          ssl:
            transport:
              enabled: true
              pemcert_filepath: certs/tls.crt
              pemkey_filepath: certs/tls.key
              pemtrustedcas_filepath: certs/ca.crt
              enforce_hostname_verification: false
            http:
              enabled: true
              pemcert_filepath: certs/tls.crt
              pemkey_filepath: certs/tls.key
              pemtrustedcas_filepath: certs/ca.crt
          authcz:
            admin_dn:
              - CN=opensearch-master.*.local
          nodes_dn:
            - CN=opensearch-master.*.local
          allow_unsafe_democertificates: false
          allow_default_init_securityindex: true
          audit.type: internal_opensearch
          enable_snapshot_restore_privilege: true
          check_snapshot_restore_write_privileges: true
          restapi:
            roles_enabled: ["all_access", "security_rest_api_access"]
          system_indices:
            enabled: true
            indices:
              [
                ".opendistro-alerting-config",
                ".opendistro-alerting-alert*",
                ".opendistro-anomaly-results*",
                ".opendistro-anomaly-detector*",
                ".opendistro-anomaly-checkpoints",
                ".opendistro-anomaly-detection-state",
                ".opendistro-reports-*",
                ".opendistro-notifications-*",
                ".opendistro-notebooks",
                ".opendistro-asynchronous-search-response*",
              ]

prometheus:
  # add prometheus to the chart by default. Cluster operators who have already
  # installed prometheus should change this to 'false'.
  enabled: true
  grafana:
    # FIX NOTE: HOW ARE PASSWORDS HANDLED?
    admin-password: ""
karpenter:
  # add Karpenter node management for AWS EKS clusters. See: https://karpenter.sh/
  enabled: true
  # FIX NOTE: CANY ANY OF THESE BE PRESET???
  {{- if not .Values.karpenter.clusterName }}
  {{- fail ".Values.karpenter.clusterName is required" }}
  {{- end }}
  {{- if not .Values.karpenter.clusterEndpoint }}
  {{- fail ".Values.karpenter.clusterEndpoint is required" }}
  {{- end }}
  {{- if not .Values.karpenter.clusterEndpoint }}
  {{- fail ".Values.karpenter.serviceAccount.annotations.eks.amazonaws.com/role-arn is required" }}
  {{- end }}
  {{- if not .Values.karpenter.aws.defaultInstanceProfile }}
  {{- fail ".Values.karpenter.aws.defaultInstanceProfile is required" }}
  {{- end }}
  cluster-name: ""
  cluster-endpoint: ""
  service-account:
    annotations:
      "eks.amazonaws.com/role-arn": ""
  aws:
    default-instance-profile: ""
  # ---------------------------------------------------------------------------
  # Provide sensible defaults for resource provisioning and lifecycle
  # ---------------------------------------------------------------------------
  provisioner:
    # ttl in seconds. If nil, the feature is disabled, nodes will never terminate
    ttl-seconds-until-expired: 600
    # ttl in seconds. If nil, the feature is disabled, nodes will never scale down
    # due to low utilization.
    ttl-seconds-after-empty: 600
  limits:
    resources:
      cpu: "400"          # 100 * 4 cpu
      memory: "1600Gi"    # 100 * 16Gi
  requirements:
    "karpenter.sh/capacity-type": ["spot", "on-demand"]
    "node.kubernetes.io/instance-type": ["t3.large", "t3.xlarge", "t3.2xlarge", "t2.xlarge", "t2.2xlarge"]
    "kubernetes.io/arch": ["amd64"]
